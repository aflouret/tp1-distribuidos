services:
  rabbitmq:
    container_name: rabbitmq
    build:
      context: ./rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:15672" ]
      interval: 10s
      timeout: 5s
      retries: 10

  client_handler:
    container_name: client_handler
    environment:
      - NEXT_STAGE_INSTANCES=1
    build:
      context: .
      dockerfile: ./client_handler/Dockerfile
    entrypoint: /client_handler
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy

  client:
    container_name: client
    build:
      context: .
      dockerfile: ./client/Dockerfile
    entrypoint: /client
    restart: on-failure
    depends_on:
      - client_handler
    volumes:
      - type: bind
        source: ./data
        target: /data
      - type: bind
        source: ./client/config.yaml
        target: /config.yaml

  duration_merger:
    container_name: duration_merger
    environment:
      - PREV_STAGE_INSTANCES=1
      - NEXT_STAGE_INSTANCES=1
    build:
      context: .
      dockerfile: ./duration_merger/Dockerfile
    entrypoint: /duration_merger
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
  
  count_merger:
    container_name: count_merger
    environment:
      - PREV_STAGE_INSTANCES=1
      - NEXT_STAGE_INSTANCES=1
    build:
      context: .
      dockerfile: ./count_merger/Dockerfile
    entrypoint: /count_merger
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy

  distance_merger:
    container_name: distance_merger
    environment:
      - PREV_STAGE_INSTANCES=1
      - NEXT_STAGE_INSTANCES=1
    build:
      context: .
      dockerfile: ./distance_merger/Dockerfile
    entrypoint: /distance_merger
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy


  duration_averager_0:
    container_name: duration_averager_0
    environment:
      - ID=0
      - PREV_STAGE_INSTANCES=1
      - NEXT_STAGE_INSTANCES=1
    build:
      context: .
      dockerfile: ./duration_averager/Dockerfile
    entrypoint: /duration_averager
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
        

  precipitation_filter_0:
    container_name: precipitation_filter_0
    environment:
      - ID=0
      - PREV_STAGE_INSTANCES=1
      - NEXT_STAGE_INSTANCES=1
    build:
      context: .
      dockerfile: ./precipitation_filter/Dockerfile
    entrypoint: /precipitation_filter
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
   

  weather_joiner_0:
    container_name: weather_joiner_0
    environment:
      - ID=0
      - PREV_STAGE_INSTANCES=1
      - NEXT_STAGE_INSTANCES=1
    build:
      context: .
      dockerfile: ./weather_joiner/Dockerfile
    entrypoint: /weather_joiner
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
   

  data_dropper_0:
    container_name: data_dropper_0
    environment:
      - ID=0
      - PREV_STAGE_INSTANCES=1
      - WEATHER_JOINER_INSTANCES=1
      - STATIONS_JOINER_INSTANCES=1
    build:
      context: .
      dockerfile: ./data_dropper/Dockerfile
    entrypoint: /data_dropper
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
 

  stations_joiner_0:
    container_name: stations_joiner_0
    environment:
      - ID=0
      - PREV_STAGE_INSTANCES=1
      - YEAR_FILTER_INSTANCES=1
      - DISTANCE_CALCULATOR_INSTANCES=1
    build:
      context: .
      dockerfile: ./stations_joiner/Dockerfile
    entrypoint: /stations_joiner
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy


  year_filter_0:
    container_name: year_filter_0
    environment:
      - ID=0
      - PREV_STAGE_INSTANCES=1
      - NEXT_STAGE_INSTANCES=1
    build:
      context: .
      dockerfile: ./year_filter/Dockerfile
    entrypoint: /year_filter
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy


  trip_counter_year_1_0:
    container_name: trip_counter_year_1_0
    environment:
      - ID=0
      - YEAR=2016
      - PREV_STAGE_INSTANCES=1
      - NEXT_STAGE_INSTANCES=1
    build:
      context: .
      dockerfile: ./trip_counter/Dockerfile
    entrypoint: /trip_counter
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
  

  trip_counter_year_2_0:
    container_name: trip_counter_year_2_0
    environment:
      - ID=0
      - YEAR=2017
      - PREV_STAGE_INSTANCES=1
      - NEXT_STAGE_INSTANCES=1
    build:
      context: .
      dockerfile: ./trip_counter/Dockerfile
    entrypoint: /trip_counter
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
  

  distance_calculator_0:
    container_name: distance_calculator_0
    environment:
      - ID=0
      - PREV_STAGE_INSTANCES=1
      - NEXT_STAGE_INSTANCES=1
    build:
      context: .
      dockerfile: ./distance_calculator/Dockerfile
    entrypoint: /distance_calculator
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy


  distance_averager_0:
    container_name: distance_averager_0
    environment:
      - ID=0
      - PREV_STAGE_INSTANCES=1
      - NEXT_STAGE_INSTANCES=1
    build:
      context: .
      dockerfile: ./distance_averager/Dockerfile
    entrypoint: /distance_averager
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy

